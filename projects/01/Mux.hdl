// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux.hdl

/*

Description:
 - has three inputs (a, b, sel) and one output (out)
 - if sel == 0, then out == a
 - if sel == 1, then out == b

Solution with brute force canonical representation:

    a * notb * notsel + a * b * notsel + nota * b * sel + a * b * sel

If you group terms, you can find a cleaner representation:

    (a * notb * notsel + a * b * notsel) + (nota * b * sel + a * b * sel)
    a * notsel + b * sel

This leads to the solution below:

    OR(
        AND(a, notsel)
        AND(b, sel)
    )

*/

CHIP Mux {
    IN a, b, sel;
    OUT out;

    PARTS:
    Not(in=sel,out=notsel);
    And(a=a, b=notsel, out=asel);
    And(a=b, b=sel, out=bsel);
    Or(a=asel,b=bsel,out=out);
}
