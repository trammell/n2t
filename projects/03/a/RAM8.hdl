// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/*

## Description

RAM8 is a chip consisting of 8 16-bit registers.

* "in" conducts the value to be saved in RAM
* "load" must be true for the value to be stored
* "address" selects one register from the 8 available
* "out"

## Implementation

* A DMux8Way chip and the "address" value are used to fan out the "load" signal
  to the correct register.
* The "in" value is sent to all registers (output from most is ignored)
* A Mux8Way16 chip is used to conduct the output value to "out".

*/

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    /* create a bunch of load circuits for the registers */
    DMux8Way(in=load, sel=address, a=loada, b=loadb, c=loadc,
             d=loadd, e=loade, f=loadf, g=loadg, h=loadh);

    /* address all the registers, seems wasteful */
    Register(in=in, load=loada, out=outa);
    Register(in=in, load=loadb, out=outb);
    Register(in=in, load=loadc, out=outc);
    Register(in=in, load=loadd, out=outd);
    Register(in=in, load=loade, out=oute);
    Register(in=in, load=loadf, out=outf);
    Register(in=in, load=loadg, out=outg);
    Register(in=in, load=loadh, out=outh);

    /* gather all the register values back and choose the right one */
    Mux8Way16(a=outa, b=outb, c=outc, d=outd, e=oute, f=outf,
              g=outg, h=outh, sel=address, out=out);
}
